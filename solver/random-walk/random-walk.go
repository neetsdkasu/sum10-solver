package randomWalk

import (
	"context"
	"sum10-solver/marker"
	"sum10-solver/problem"
	"sum10-solver/solver"
)

type RandomWalk struct{}

var randomWalk = &RandomWalk{}

func init() {
	solver.Register(randomWalk)
}

func (*RandomWalk) Name() string {
	return "RandomWalk"
}

func (*RandomWalk) Description() string {
	return "find best one of solutions generated by random"
}

func (*RandomWalk) Search(ctx context.Context, problem *problem.Problem) []*marker.Marker {
	var best = []*marker.Marker{}
	ch := search(problem)
	for {
		select {
		case <-ctx.Done():
			return best
		case sol := <-ch:
			best = sol
		}
	}
}

func search(problem *problem.Problem) <-chan []*marker.Marker {
	ch := make(chan []*marker.Marker)

	return ch
}
